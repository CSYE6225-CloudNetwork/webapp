name: WebApp CI - workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  webapp-ci:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PWD }}
          MYSQL_DATABASE: csye6225
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PWD }}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      DB_USER: appuser
      DB_NAME: csye6225
      DATABASE: ${{ secrets.DATABASE }}
      USERNAME: ${{ secrets.USERNAME }}
      DB_PASSWORD: ${{ secrets.MYSQL_PWD }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Install and Set up JDK21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Connect MySQL & Database Creation
        run: |
          # Wait for MySQL to be ready
          timeout 30 bash -c 'until mysql -h"127.0.0.1" -P"3306" -u${{ secrets.USERNAME }} -p"${{ secrets.MYSQL_PWD }}" -e "SELECT 1"; do sleep 2; done'
          
          # Create database if it doesn't exist
          mysql -h"127.0.0.1" -P"3306" -u${{ secrets.USERNAME }} -p"${{ secrets.MYSQL_PWD }}" -e "CREATE DATABASE IF NOT EXISTS ${{ env.DB_NAME }};"

      - name: Maven Build
        run: |
          cd webapp
          mvn clean package -DskipTests


      - name: Start Spring Boot application - RUN
        run:
          cd webapp/target && nohup java -jar webapp-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          echo $! > ./pid.file
      

      - name: Waiting for application to start
        run: |
          sleep 30
    
      - name: Execute Tests
        run: |
          cd ./TestSuite/ && \
          mvn test

      
      - name: Stop Spring Boot application
        if: always()
        run: |
          
          if [ -f webapp/target/pid.file ]; then
            kill $(cat webapp/target/pid.file)
            echo "Application stopped"
            cat webapp/target/app.log
          
          fi