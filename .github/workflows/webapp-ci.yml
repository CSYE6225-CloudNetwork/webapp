name: WebApp CI - workflow

on:
  pull_request:
    branches: [main]

jobs:
  webapp-ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PWD }}
          MYSQL_DATABASE: csye6225
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PWD }}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      DB_USER: appuser
      DB_NAME: csye6225
      database: ${{ secrets.database }}
      username: ${{ secrets.username }}
      password: ${{ secrets.MYSQL_PWD }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      aws_region: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Install and Set up JDK21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest" # or specify a version like "1.12.0"

      - name: Connect MySQL & database Creation
        run: |
          # Wait for MySQL to be ready
          timeout 30 bash -c 'until mysql -h"127.0.0.1" -P"3306" -u${{ secrets.username }} -p"${{ secrets.MYSQL_PWD }}" -e "SELECT 1"; do sleep 2; done'
          
          # Create database if it doesn't exist
          mysql -h"127.0.0.1" -P"3306" -u${{ secrets.username }} -p"${{ secrets.MYSQL_PWD }}" -e "CREATE DATABASE IF NOT EXISTS ${{ env.DB_NAME }};"

      - name: Maven Build
        run: |
          cd webapp
          mvn clean package -DskipTests


      - name: Start Spring Boot application - RUN
        run:
          cd webapp/target && nohup java -jar webapp-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          echo $! > ./pid.file


      - name: Waiting for application to start
        run: |
          sleep 40 && \
          cat webapp/target/app.log


      - name: Execute Tests
        run: |
          cd ./TestSuite/ && \
          mvn test


      - name: Stop Spring Boot application
        if: always()
        run: |
          cat webapp/target/app.log
          if [ -f webapp/target/pid.file ]; then
            kill $(cat webapp/target/pid.file)
            echo "Application stopped"
            cat webapp/target/app.log
          
          fi

      - name: Initialize Packer Plugins
        run: |
          cd packer
          packer init .

      - name: Format Packer Files (Check Only)
        run: |
          cd packer
          packer fmt -recursive -check .

      - name: Validate Packer Template
        run: |
          cd packer
          packer validate \
            -var "instance_type=${{ vars.AWS_INSTANCE_TYPE }}" \
            -var "region=${{ vars.AWS_REGION }}" \
            -var "ssh_username=${{ vars.AWS_SSH_USERNAME }}" \
            -var "USERNAME=${{ secrets.username }}" \
            -var "gcp_project_id=${{ vars.GCP_PROJECT_ID }}" \
            -var "gcp_zone=${{ vars.GCP_ZONE }}" \
            -var "MYSQL_PWD=${{ secrets.MYSQL_PWD }}" \
            -var "AWS_DEMO_ACCOUNT_ID=${{ secrets.AWS_DEMO_ACCOUNT_ID }}" \
            aws-ubuntu.pkr.hcl